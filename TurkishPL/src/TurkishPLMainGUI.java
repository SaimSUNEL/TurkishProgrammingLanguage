/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.awt.image.ImageObserver;
import java.awt.image.ImageProducer;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.util.Formatter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

import org.antlr.v4.runtime.ANTLRFileStream;
import org.antlr.v4.runtime.CommonTokenStream;
import org.antlr.v4.runtime.tree.ParseTree;

/**
 *
 * @author Saim
 */
public class TurkishPLMainGUI extends javax.swing.JFrame {

	
	public class YeniOutput extends OutputStream
	{
private JTextArea output ;
private byte [] buffer ;	
public YeniOutput ( JTextArea area )
		{
		output = area 	;
	buffer = new byte [ 1 ]  
			;
			
		}
		
		@Override
		public void write(int arg0) throws IOException {
			// TODO Auto-generated method stub
			 buffer [ 0 ] = (byte )arg0 ;
			 String s = new String ( buffer , "UTF-8" ) ;
			output.append(s);
		        // scrolls the text area to the end of data
		       // output.setCaretPosition(output.getDocument().getLength());
		}
		
		
		
		
		
	}
	
	
	
    /**
     * Creates new form TurkishPLMainGUI
     */
    public TurkishPLMainGUI() {
        initComponents();
        
        try {
			System.setOut( new PrintStream( new YeniOutput ( this.jTextArea2 ) , true , "UTF-8" ) ) ;
		} catch (UnsupportedEncodingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
        
        this.setIconImage(new ImageIcon ( "bayrak.png").getImage()  ) ;
        this.jButton1.addActionListener( new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				TurkishPLMainGUI.this.çalýþtýr () ;
				
				
			}
		});
        this.jMenuBar1.add ( this.jButton1 ) ;
        dosya_seçici.setFileSelectionMode( JFileChooser.FILES_ONLY );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu5 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jButton1 = new javax.swing.JButton();
        jMenuItem11 = new javax.swing.JMenuItem();
        popupMenu1 = new java.awt.PopupMenu();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jSplitPane2 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();

        jMenu5.setText("jMenu5");

        jMenuItem8.setText("jMenuItem8");

        jMenuItem10.setText("jMenuItem10");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("start.png"))); // NOI18N

        jMenuItem11.setText("jMenuItem11");

        popupMenu1.setLabel("popupMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Türkçe Programlama Dili");
        setFocusCycleRoot(false);
        setPreferredSize(new java.awt.Dimension(447, 400));
        setResizable(false);
        getContentPane().add(filler1, java.awt.BorderLayout.CENTER);

        jSplitPane2.setDividerLocation(250);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane2.setName(""); // NOI18N
        jSplitPane2.setPreferredSize(new java.awt.Dimension(108, 330));
        jSplitPane2.setRequestFocusEnabled(false);
        jSplitPane2.setRightComponent( this.jTextArea1 );
        jSplitPane2.setLeftComponent( this.jTextArea2 );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jSplitPane2.setLeftComponent(jScrollPane1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(30);
        jScrollPane2.setViewportView(jTextArea2);

        jSplitPane2.setBottomComponent(jScrollPane2);

        getContentPane().add(jSplitPane2, java.awt.BorderLayout.PAGE_START);

        jMenu1.setText("Dosya");

        jMenuItem1.setText("Yeni...");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Aç...");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Kaydet...");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem13.setText("Farklý Kaydet...");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem13);

        jMenuItem4.setText("Kapat...");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Proje");

        jMenuItem5.setText("Söz dizimi kontrolü...");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setText("Çalýþtýr...");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        jMenuItem7.setText("Hakkýnda");
        jMenu3.add(jMenuItem7);

        jMenu4.setText("Dil");

        jMenuItem9.setText("Dil Dökümantasyonu");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem9);

        jMenuItem12.setText("Online Help");
        jMenu4.add(jMenuItem12);

        jMenu3.add(jMenu4);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        //yeni dosya oluÅŸturulunca bir Ã¶ncekini iptal ediyoruz..
        this.dosya_yolu  = "" ;
        
        if ( this.kaydedildi == false )
{
   int seçilen = JOptionPane.showConfirmDialog(null , "Kodu kaydetmek istiyor musunuz?" , "Uyarý" ,  JOptionPane.YES_NO_OPTION ) ;
   
   if ( seçilen == JOptionPane.YES_OPTION ) 
   {
       
      this.dosyayý_kaydet();
             
       this.kaydedildi = true ;
       
   }
   else 
   {
       this.kaydedildi = true ;
       jTextArea1.setText ( "" ) ;
       
   }
  
  return ;
}
else
{
    this.kaydedildi = false ;
    this.jTextArea1.setText ( "" ) ;
    
}

        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

       this.dosyayý_kaydet();  //dosyayÄ±_kaydetme_fonksiyonu
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void dosyayý_kaydet ( ) 
    {
        String önceki_seçili_dosya  = null ;
        
        if ( this.dosya_yolu .equals ( "" )  ){
            
           this.dosya_seçici.setSelectedFile( new File ( "" ) );
            this.dosya_seçici.setSelectedFiles( new File [ ] { new File ( "" ) } );
            this.dosya_seçici.setDialogTitle( "Lütfen dosyanýn ismini yazýn..." )  ;
            
          int seçilen =   this.dosya_seçici.showSaveDialog(this ) ;
            
            if ( seçilen == JFileChooser.APPROVE_OPTION )
            {
            
                File kayýt_edilecek = this.dosya_seçici.getSelectedFile() ;
                Formatter kaydet = null ; 
                       
               try {
                   kaydet = new Formatter ( kayýt_edilecek , "UTF-8" )  ;
               } catch (FileNotFoundException ex) {
                   Logger.getLogger(TurkishPLMainGUI.class.getName()).log(Level.SEVERE, null, ex);
               } catch (UnsupportedEncodingException ex) {
                   Logger.getLogger(TurkishPLMainGUI.class.getName()).log(Level.SEVERE, null, ex);
               }
                
               kaydet.format( "%s" ,  this.jTextArea1.getText ( ) );
               kaydet.close( );
               
               this.dosya_yolu = "" + kayýt_edilecek ;
                this.kaydedildi = true ;
                
                
            }
            else 
            {
                
                //Ä°ptal edilmiÅŸse bir ÅŸey yapmadan devam et....
                return ;
                
            }
            
            
        }
        Formatter k = null ;
        try {
            k = new Formatter ( new File ( this.dosya_yolu ) , "UTF-8" ) ;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TurkishPLMainGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(TurkishPLMainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        k.format( "%s" , this.jTextArea1.getText ( ) ) ;
        k.close ( ) ;
        
        //KullanÄ±cÄ± yeni bir dosya aÃ§abilir yada oluÅŸturabilir...
        this.kaydedildi = true ;
        
    }
    
    
    
    private String þuan_açýk_olan_dosya = null ;
    private boolean kaydedildi = true  ;
    private String dosya_yolu = "" ;
    
    
    
    
  private JFileChooser dosya_seçici = new JFileChooser()  ;
    
    
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
   
        if ( this.kaydedildi == false ) 
        {
           
           int seçilen =  JOptionPane.showConfirmDialog(null , "Lütfen kodu kaydedin..."  , "Uyarý..." , JOptionPane.YES_NO_OPTION ) ;
            
            if ( seçilen == JOptionPane.YES_OPTION )
            {
                this.dosyayý_kaydet(); 
       this.kaydedildi = true ;    
                          
            }
            else if ( seçilen == JOptionPane.NO_OPTION )
            {
                this.kaydedildi = true ;
            }
            
            return ;
            
            
        }
        
        
        
dosya_seçici.setSelectedFile( new File ( "") );
dosya_seçici.setSelectedFiles( new File [] { new File ("") } );
//yeni dosya aÃ§Ä±lÄ±rken bir Ã¶nceki kod temizleniyor...
jTextArea1.setText ( "" ) ;


        dosya_seçici.setDialogTitle( "Lütfen Kaynak Kod Dosyasýný Seçiniz..." );
FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "Kod Dosyasý", "TC");
        dosya_seçici.setFileFilter( filter  ) ;
        
 int geri = dosya_seçici.showOpenDialog( this ) ;
 File seçilen_dosya = null ;
 if ( geri == JFileChooser.APPROVE_OPTION )
 {

 seçilen_dosya = dosya_seçici.getSelectedFile() ;


if ( seçilen_dosya == null )
     JOptionPane.showMessageDialog ( null , "Dosya Seçilmedi..."  ) ;
else 
{ 
    Scanner dosya = null ;

     
     try {
          dosya = new Scanner ( seçilen_dosya , "UTF-8") ;
          System.out.println ( "Dosya okunmak için açýldý..." + seçilen_dosya ) ;
          this.dosya_yolu = "" + seçilen_dosya ;
          
    //
          //JOptionPane.showMessageDialog(  null , seçilen_dosya.getName() + "Dosya seÃ§idi..." ) ;
     } catch (FileNotFoundException ex) {
         Logger.getLogger(TurkishPLMainGUI.class.getName()).log(Level.SEVERE, null, ex);
     }
String okunan = null ;
     //JOptionPane.showMessageDialog ( null , okunan ) ;
     while ( dosya.hasNext() )
     {okunan =  dosya.nextLine() ;
    // JOptionPane.showMessageDialog ( null , okunan ) ;
         
         this.jTextArea1.setText( this.jTextArea1.getText ( ) + okunan + "\n" );
         
         
     }
     
     this.dosya_yolu = "" + seçilen_dosya 
    		 ;
     
}

 }
 
 
// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
    
        
        //Dosya kaydedilmemiÅŸmi kontrol et , kaydedilmemiÅŸse kullanÄ±cÄ±yÄ± uyar...
        
      System.exit ( 0 ) ;


// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
  
       
        
        this.dosya_seçici.setDialogTitle( "Farklý Kaydet..." );
        int seçilen = this.dosya_seçici.showSaveDialog(this   );
        
        if ( seçilen == JFileChooser.APPROVE_OPTION )
        {
            try {
                File dos = this.dosya_seçici.getSelectedFile() ;
                
                Formatter yen = new Formatter ( dos , "UTF-16"  ) ;
                
                
                yen.format( "%s" , this.jTextArea1.getText ( )  ) ;
                yen.close( );
                this.dosya_yolu = "" + dos ;
                this.kaydedildi = true ;
            }
// TODO add your handling code here:
            catch (FileNotFoundException ex) {
                Logger.getLogger(TurkishPLMainGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(TurkishPLMainGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
          
            
            
        }
        



    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    
    //Ã‡alÄ±ÅŸtÄ±r..
    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
  
    	
    	this.çalýþtýr ( ) ;
    	
    }
    	private void çalýþtýr ( ) 
   {
    	if ( this.dosya_yolu.equals( "") )
    	{
    		JOptionPane.showMessageDialog ( null , "Lütfen bir kaynak dosyasýný açýnýz yada yeni bir tane oluþturunuz..." ) ;
    		
    		return ;
    		
    	}
    	
    	this.dosyayý_kaydet(); 

    	String file_path = this.dosya_yolu ;//"program.txt" ;
		
    	 Thread x = new Thread( new Runnable() {
			
    		 
    		 
    		 
    		 
			@Override
			public void run() {
				// TODO Auto-generated method stub
		
				/* try {
						System.setOut( new PrintStream( new YeniOutput ( TurkishPLMainGUI.this.jTextArea2 ) , true , "UTF-8" ) ) ;
					} catch (UnsupportedEncodingException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}	
				*/
				
				DilLexer lexer = null ;
				try {
					lexer = new DilLexer( new ANTLRFileStream( file_path , "UTF-8") );
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				//JOptionPane.showMessageDialog ( null , "Dosya açýldý..." ) ;
					CommonTokenStream token_stream = new CommonTokenStream( lexer ) ;
					
					//JOptionPane.showMessageDialog ( null  , "Tokenizing tamam" ) ;
					
					DilParser parser = new DilParser( token_stream ) ;
					
					
					
					ParseTree tree = parser.program();
			       	TurkishPLOutput pencere =   new TurkishPLOutput( );
			        TreeWalker walker = new TreeWalker ( pencere );
						
		           pencere.addWindowListener( new WindowListener() {
				   @Override
					public void windowOpened(WindowEvent arg0) {
						// TODO Auto-generated method stub
						
					}
					
					@Override
					public void windowIconified(WindowEvent arg0) {
						// TODO Auto-generated method stub
						
					}
					
					@Override
					public void windowDeiconified(WindowEvent arg0) {
						// TODO Auto-generated method stub
						
					}
					
					@Override
					public void windowDeactivated(WindowEvent arg0) {
						// TODO Auto-generated method stub
						
					}
					
					@Override
					public void windowClosing(WindowEvent arg0) {
						// TODO Auto-generated method stub
					
					}
					
					@Override
					public void windowClosed(WindowEvent arg0) {
						// TODO Auto-generated method stub
						
					}
					
					@Override
					public void windowActivated(WindowEvent arg0) {
						// TODO Auto-generated method stub
						
					}
				});
		           
			           
			           
			           
			           
			           
			           
			           pencere.setVisible( true );
			    //       JOptionPane.showMessageDialog( null , "walker tamam" );
			       
			           try 
			           {
			           walker.visit( tree ) ;
					
			           }
			           catch ( Exception er )
			           {
			        	   System.out.println ( "Parsing hatasý.."  ) ;
			        	   
			           }
			           //System.out.println ( "Walking has finished..." ) ;
					//windows.setVisible( true );
				System.out.println ( "Program bitti" ) ;
				//JOptionPane.showMessageDialog( null , "Walk started"  ) ;
					//ParseTreeWalker walker = new ParseTreeWalker() ;
					//System.out.println( "Walker " ) ;
				//walker.walk( new TreeWalker () , tree ) ;
				
				
				
			}
		});
    	//DilLexer lexer = new DilLexer( new ANTLRFileStream( file_path , "UTF-8") ) ;
    	
	
 x.start();
    
    }//GEN-LAST:event_jMenuItem6ActionPerformed
  
    
    //SÃ¶z dizimi
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
   
    	if ( this.dosya_yolu.equals( "") )
    	{
    		JOptionPane.showMessageDialog ( null , "Lütfen bir kaynak dosyasýný açýnýz yada yeni bir tane oluþturunuz..." ) ;
    		
    		return ;
    		
    	}
    	
    	this.dosyayý_kaydet(); 

    	String file_path = this.dosya_yolu ;//"program.txt" ;
		
    	
    	//DilLexer lexer = new DilLexer( new ANTLRFileStream( file_path , "UTF-8") ) ;
    	DilLexer lexer = null ;
		try {
			lexer = new DilLexer( new ANTLRFileStream( file_path , "UTF-8") );
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
			CommonTokenStream token_stream = new CommonTokenStream( lexer ) ;
			DilParser parser = new DilParser( token_stream ) ;
			ParseTree tree = parser.program();
			//Console windows = new Console(  );
	System.out.println ( "Kodda bir problem yok..." ) ;
			
	    
    
    
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TurkishPLMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TurkishPLMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TurkishPLMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TurkishPLMainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TurkishPLMainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private java.awt.PopupMenu popupMenu1;
    // End of variables declaration//GEN-END:variables
}
